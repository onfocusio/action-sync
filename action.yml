name: Create a PR for new tags on upstream repository
description: Create a PR for new tags on upstream repository.
author: Onfocus

inputs:
  upstream_repo:
    description: URL of GitHub public upstream repo
    required: true
  target_branch:
    description: Branch to merge into downstream
    required: false
    default: "main"
  negate_workflow_changes:
    description: Setting this to "true" will automatically create a commit removing all changes on ".github/workflows/*"
    default: "false"

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
    - name: Run script
      shell: bash
      env:
        UPSTREAM_REPO: ${{ inputs.upstream_repo }}
        TARGET_BRANCH: ${{ inputs.target_branch }}
        NEGATE_WORKFLOW_CHANGES: ${{ inputs.negate_workflow_changes }}
      run: |
        set -x -e
        echo "UPSTREAM_REPO=$UPSTREAM_REPO"
        echo "TARGET_BRANCH=$TARGET_BRANCH"
        OWNER_REPO=$(git remote -v | grep -w origin | head -n 1 | grep -Po 'https://github\.com/\K.+?(?= )')

        git remote -v | grep -w upstream || git remote add upstream https://github.com/$UPSTREAM_REPO.git

        git fetch --tags
        LATEST=$(gh release list -L 1 -R $UPSTREAM_REPO --json tagName -t '{{range .}}{{.tagName}}{{end}}')
        LATEST_TIME=$(gh release list -L 1 -R $UPSTREAM_REPO --json createdAt -t '{{range .}}{{.createdAt}}{{end}}')
        LATEST_TIME=$(date -d "$LATEST_TIME" +"%s")
        LOCAL_LATEST=$(git log --tags --not --remotes=upstream --simplify-by-decoration --pretty="format:%S" -1)
        LOCAL_LATEST_TIME=$(git log --tags --not --remotes=upstream --simplify-by-decoration --pretty="format:%at" -1)
        RELEASE_URL="https://github.com/$UPSTREAM_REPO/releases/tag/${LATEST}"
        if [ $LATEST_TIME -gt $LOCAL_LATEST_TIME ]; then
            BRANCH_NAME="chore/sync-$LATEST"

            if [ $(git rev-parse --verify origin/chore/sync-$LATEST 2>/dev/null) ]; then
              echo "A branch already exists for this sync"
              exit 0
            fi

            git fetch upstream refs/tags/$LATEST:refs/tags/$LATEST
            git branch -D chore/sync-$LATEST 2&>/dev/null || true
            git switch -c chore/sync-$LATEST $LATEST
            if [ $NEGATE_WORKFLOW_CHANGES = "true" ]; then
              git restore --source=$TARGET_BRANCH .github/workflows/*
              if [ -n "$(git status --porcelain)" ]; then
                git commit -m "CI: Negate workflow changes"
              fi
            fi
            git push -u origin chore/sync-$LATEST
            gh pr create -B $TARGET_BRANCH -t "Sync $LATEST" -b $RELEASE_URL -R $OWNER_REPO
        fi

branding:
  icon: "git-merge"
  color: "blue"
