name: Create a PR for new tags on upstream repository
description: Create a PR for new tags on upstream repository.
author: Onfocus

inputs:
  upstream_repo:
    description: URL of GitHub public upstream repo
    required: true
  target_branch:
    description: Branch to merge into downstream
    required: false
    default: "main"

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
    - name: Run script
      shell: bash
      env:
        UPSTREAM_REPO: ${{ inputs.upstream_repo }}
        TARGET_BRANCH: ${{ inputs.target_branch }}
      run: |
        set -x -e
        echo "UPSTREAM_REPO=$UPSTREAM_REPO"
        echo "TARGET_BRANCH=$TARGET_BRANCH"
        OWNER_REPO=$(git remote -v | grep -w origin | head -n 1 | grep -Po 'https://github\.com/\K.+?(?= )')

        git remote -v | grep -w upstream || git remote add upstream https://github.com/$UPSTREAM_REPO.git

        git fetch --tags
        LATEST=$(gh release list -L 1 -R $UPSTREAM_REPO --json tagName -t '{{range .}}{{.tagName}}{{end}}')
        LATEST_TIME=$(gh release list -L 1 -R $UPSTREAM_REPO --json createdAt -t '{{range .}}{{.createdAt}}{{end}}' | date +"%s")
        LOCAL_LATEST=$(git tag -l --sort=-v:refname | head -n 1 | xargs)
        LOCAL_LATEST_TIME=$(git log --tags --simplify-by-decoration --pretty="format:%at" $LOCAL_LATEST^..$LOCAL_LATEST)
        RELEASE_URL="https://github.com/$UPSTREAM_REPO/releases/tag/${LATEST}"
        if [ $LATEST_TIME -gt $LOCAL_LATEST_TIME ]; then
            BRANCH_NAME="chore/sync-$LATEST"

            OPEN_PR=$(gh pr list -S 'is:pr is:open "Sync $LATEST"' --json headRefName -t '{{range .}}{{.headRefName}}{{end}}' || '')
            if [ "$OPEN_PR" != "" ]; then
              echo "A PR already exists for this sync"
              exit 0
            fi

            git fetch upstream refs/tags/$LATEST:refs/tags/$LATEST
            git branch -D chore/sync-$LATEST 2&>/dev/null || true
            git switch -c chore/sync-$LATEST $LATEST
            git push -u origin chore/sync-$LATEST
            gh pr create -B $TARGET_BRANCH -t "Sync $LATEST" -b $RELEASE_URL -R $OWNER_REPO
        fi

branding:
  icon: "git-merge"
  color: "blue"
